{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jeanbapt-sanchez/Documents/school/bddi-2020/gobelins-2020/Semaine-7/J4/game-juniper-green/src/Router.js\";\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport Rules from './components/Rules';\nconst routes = [{\n  path: \"/\",\n  component: Home\n}, {\n  path: \"/home\",\n  component: Home\n}, {\n  path: \"/game\",\n  component: Home,\n  routes: [{\n    path: \"/game/rules\",\n    component: Rules\n  }]\n}];\n\nconst RouteWithSubRoutes = route => {\n  return /*#__PURE__*/_jsxDEV(Route, {\n    path: route.path,\n    render: props =>\n    /*#__PURE__*/\n    // pass the sub-routes down to keep nesting\n    _jsxDEV(route.component, { ...props,\n      routes: route.routes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_c = RouteWithSubRoutes;\n\nconst ConfigRouter = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: routes.map((route, i) => /*#__PURE__*/_jsxDEV(RouteWithSubRoutes, { ...route\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = ConfigRouter;\nexport default ConfigRouter;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RouteWithSubRoutes\");\n$RefreshReg$(_c2, \"ConfigRouter\");","map":{"version":3,"sources":["/Users/jeanbapt-sanchez/Documents/school/bddi-2020/gobelins-2020/Semaine-7/J4/game-juniper-green/src/Router.js"],"names":["BrowserRouter","Router","Route","Link","Switch","Home","Rules","routes","path","component","RouteWithSubRoutes","route","props","ConfigRouter","map","i"],"mappings":";;AAAA,SAAQA,aAAa,IAAIC,MAAzB,EAAiCC,KAAjC,EAAwCC,IAAxC,EAA8CC,MAA9C,QAA2D,kBAA3D;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,MAAMC,MAAM,GAAG,CACb;AACEC,EAAAA,IAAI,EAAE,GADR;AAEEC,EAAAA,SAAS,EAAEJ;AAFb,CADa,EAKb;AACEG,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,SAAS,EAAEJ;AAFb,CALa,EASb;AACEG,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,SAAS,EAAEJ,IAFb;AAGEE,EAAAA,MAAM,EAAE,CACN;AACEC,IAAAA,IAAI,EAAE,aADR;AAEEC,IAAAA,SAAS,EAAEH;AAFb,GADM;AAHV,CATa,CAAf;;AAqBA,MAAMI,kBAAkB,GAAIC,KAAD,IAAW;AACpC,sBACE,QAAC,KAAD;AACE,IAAA,IAAI,EAAEA,KAAK,CAACH,IADd;AAEE,IAAA,MAAM,EAAEI,KAAK;AAAA;AACX;AACA,YAAC,KAAD,CAAO,SAAP,OAAqBA,KAArB;AAA4B,MAAA,MAAM,EAAED,KAAK,CAACJ;AAA1C;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAVD;;KAAMG,kB;;AAYN,MAAMG,YAAY,GAAG,MAAM;AACzB,sBACE,QAAC,MAAD;AAAA,2BACI,QAAC,MAAD;AAAA,gBACGN,MAAM,CAACO,GAAP,CAAW,CAACH,KAAD,EAAQI,CAAR,kBACV,QAAC,kBAAD,OAAgCJ;AAAhC,SAAyBI,CAAzB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAVD;;MAAMF,Y;AAYN,eAAeA,YAAf","sourcesContent":["import {BrowserRouter as Router, Route, Link, Switch} from 'react-router-dom'\nimport Home from './components/Home';\nimport Rules from './components/Rules';\n\nconst routes = [\n  {\n    path: \"/\",\n    component: Home\n  },\n  {\n    path: \"/home\",\n    component: Home\n  },\n  {\n    path: \"/game\",\n    component: Home,\n    routes: [\n      {\n        path: \"/game/rules\",\n        component: Rules\n      }\n    ]\n  }\n];\n\nconst RouteWithSubRoutes = (route) => {\n  return (\n    <Route\n      path={route.path}\n      render={props => (\n        // pass the sub-routes down to keep nesting\n        <route.component {...props} routes={route.routes} />\n      )}\n    />\n  );\n}\n\nconst ConfigRouter = () => {\n  return (\n    <Router>\n        <Switch>\n          {routes.map((route, i) => (\n            <RouteWithSubRoutes key={i} {...route} />\n          ))}\n        </Switch>\n    </Router>\n  );\n}\n\nexport default ConfigRouter;\n"]},"metadata":{},"sourceType":"module"}