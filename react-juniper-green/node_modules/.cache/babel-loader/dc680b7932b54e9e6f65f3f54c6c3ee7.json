{"ast":null,"code":"export const initialState = {\n  message: '',\n  playerChoices: [],\n  computerChoices: [],\n  isLoose: false,\n  turn: 'player'\n};\nexport const reducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'ADD_YOUR_CHOICE':\n      console.log('Play Reducer', 'ADD_YOUR_CHOICE');\n      let isAlreadySend = false;\n\n      for (let i = 0; i < state.playerChoices.length && i < state.computerChoices.length; i++) {\n        console.log(state.playerChoices[i]);\n\n        if (state.playerChoices[i] === action.number) {\n          isAlreadySend = true;\n        }\n\n        if (state.computerChoices[i] === action.number) {\n          isAlreadySend = true;\n        }\n      }\n\n      if (isAlreadySend) {\n        return { ...state,\n          message: state.message = 'This number was already send, you loose',\n          isLoose: state.isLoose = false\n        };\n      } else if (action.number) {\n        return { ...state,\n          playerChoices: state.playerChoices.concat(action.number),\n          message: state.message = `You send ${action.number}`\n        };\n      } else {\n        return { ...state,\n          message: state.message = 'Is not a valid number'\n        };\n      }\n\n    case 'ADD_COMPUTER_CHOICE':\n      console.log('Play Reducer', 'ADD_COMPUTER_CHOICE');\n      return { ...state,\n        choices: state.choices['computer'].concat(() => Math.random() * (100 - 0) + 0)\n      };\n\n    default:\n      console.log('Play Reducer', 'unrecognised type');\n      return { ...state\n      };\n  }\n}; // CHOOSE\n// POUR : i de 1 a 100\n// SI : i % nombre choisi == 0 -> diviseurs communs donc on repond\n// SINON SI : POUR : j de 1 a 100 -> i * j == nombre choisi -> multiple donc on repond\n// SINON : JE SUIS BLOQUE\n// VERIFICATION\n// POUR : i de 1 a 100\n// SI : i % nombre donne == 0 -> OK DIVISEUR\n// SINON SI : POUR : j de 1 a 100 -> i * j == nombre donne -> OK MULTIPLE\n// SINON : LOOSE","map":{"version":3,"sources":["/Users/jeanbapt-sanchez/Documents/school/bddi-2020/gobelins-2020/Semaine-7/J4/game-juniper-green/src/reducers/Play.js"],"names":["initialState","message","playerChoices","computerChoices","isLoose","turn","reducer","state","action","type","console","log","isAlreadySend","i","length","number","concat","choices","Math","random"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,OAAO,EAAE,EADiB;AAE1BC,EAAAA,aAAa,EAAE,EAFW;AAG1BC,EAAAA,eAAe,EAAE,EAHS;AAI1BC,EAAAA,OAAO,EAAE,KAJiB;AAK1BC,EAAAA,IAAI,EAAE;AALoB,CAArB;AAQP,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC7C,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,iBAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,iBAA5B;AAEA,UAAIC,aAAa,GAAG,KAApB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACL,aAAN,CAAoBY,MAAxB,IAAkCD,CAAC,GAAGN,KAAK,CAACJ,eAAN,CAAsBW,MAA5E,EAAoFD,CAAC,EAArF,EAAyF;AACvFH,QAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACL,aAAN,CAAoBW,CAApB,CAAZ;;AACA,YAAIN,KAAK,CAACL,aAAN,CAAoBW,CAApB,MAA2BL,MAAM,CAACO,MAAtC,EAA8C;AAC5CH,UAAAA,aAAa,GAAG,IAAhB;AACD;;AACD,YAAIL,KAAK,CAACJ,eAAN,CAAsBU,CAAtB,MAA6BL,MAAM,CAACO,MAAxC,EAAgD;AAC9CH,UAAAA,aAAa,GAAG,IAAhB;AACD;AACF;;AAED,UAAIA,aAAJ,EAAmB;AACjB,eAAO,EACL,GAAGL,KADE;AAELN,UAAAA,OAAO,EAAEM,KAAK,CAACN,OAAN,GAAgB,yCAFpB;AAGLG,UAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB;AAHpB,SAAP;AAKD,OAND,MAMO,IAAII,MAAM,CAACO,MAAX,EAAmB;AACxB,eAAO,EACL,GAAGR,KADE;AAELL,UAAAA,aAAa,EAAEK,KAAK,CAACL,aAAN,CAAoBc,MAApB,CAA2BR,MAAM,CAACO,MAAlC,CAFV;AAGLd,UAAAA,OAAO,EAAEM,KAAK,CAACN,OAAN,GAAiB,YAAWO,MAAM,CAACO,MAAO;AAH9C,SAAP;AAKD,OANM,MAMA;AACL,eAAO,EACL,GAAGR,KADE;AAELN,UAAAA,OAAO,EAAEM,KAAK,CAACN,OAAN,GAAgB;AAFpB,SAAP;AAID;;AAEH,SAAK,qBAAL;AACES,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,qBAA5B;AACA,aAAO,EACL,GAAGJ,KADE;AAELU,QAAAA,OAAO,EAAEV,KAAK,CAACU,OAAN,CAAc,UAAd,EAA0BD,MAA1B,CAAiC,MAAOE,IAAI,CAACC,MAAL,MAAiB,MAAM,CAAvB,IAA4B,CAApE;AAFJ,OAAP;;AAIF;AACET,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,mBAA5B;AACA,aAAO,EACL,GAAGJ;AADE,OAAP;AA1CJ;AA8CD,CA/CM,C,CAiDP;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["export const initialState = {\n  message: '',\n  playerChoices: [],\n  computerChoices: [],\n  isLoose: false,\n  turn: 'player'\n}\n\nexport const reducer = (state = {}, action) => {\n  switch(action.type) {\n    case 'ADD_YOUR_CHOICE':\n      console.log('Play Reducer', 'ADD_YOUR_CHOICE')\n\n      let isAlreadySend = false;\n      for (let i = 0; i < state.playerChoices.length && i < state.computerChoices.length; i++) {\n        console.log(state.playerChoices[i]);\n        if (state.playerChoices[i] === action.number) {\n          isAlreadySend = true\n        }\n        if (state.computerChoices[i] === action.number) {\n          isAlreadySend = true\n        }\n      }\n\n      if (isAlreadySend) {\n        return {\n          ...state,\n          message: state.message = 'This number was already send, you loose',\n          isLoose: state.isLoose = false\n        }\n      } else if (action.number) {\n        return {\n          ...state,\n          playerChoices: state.playerChoices.concat(action.number),\n          message: state.message = `You send ${action.number}`\n        }\n      } else {\n        return {\n          ...state,\n          message: state.message = 'Is not a valid number'\n        }\n      }\n\n    case 'ADD_COMPUTER_CHOICE':\n      console.log('Play Reducer', 'ADD_COMPUTER_CHOICE')\n      return {\n        ...state,\n        choices: state.choices['computer'].concat(() => (Math.random() * (100 - 0) + 0))\n      }\n    default:\n      console.log('Play Reducer', 'unrecognised type')\n      return {\n        ...state\n      }\n  }\n}\n\n// CHOOSE\n// POUR : i de 1 a 100\n// SI : i % nombre choisi == 0 -> diviseurs communs donc on repond\n// SINON SI : POUR : j de 1 a 100 -> i * j == nombre choisi -> multiple donc on repond\n// SINON : JE SUIS BLOQUE\n\n// VERIFICATION\n// POUR : i de 1 a 100\n// SI : i % nombre donne == 0 -> OK DIVISEUR\n// SINON SI : POUR : j de 1 a 100 -> i * j == nombre donne -> OK MULTIPLE\n// SINON : LOOSE\n"]},"metadata":{},"sourceType":"module"}