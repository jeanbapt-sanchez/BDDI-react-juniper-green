{"ast":null,"code":"export const initialState = {\n  message: '',\n  myNumber: 1,\n  choice: {}\n};\nexport const reducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'ADD_YOUR_CHOICE':\n      console.log('Play Reducer', 'ADD_YOUR_CHOICE');\n\n      if (action.number) {\n        return { ...state,\n          choice: state.choice['player'].concat(state.myNumber),\n          message: state.message = `You send ${action.number}`\n        };\n      } else {\n        return { ...state,\n          message: state.message = 'Is not a valid number'\n        };\n      }\n\n    case 'ADD_COMPUTER_CHOICE':\n      console.log('Play Reducer', 'ADD_COMPUTER_CHOICE');\n      return { ...state,\n        choice: state.choice['computer'].concat(() => Math.random() * (100 - 0) + 0)\n      };\n\n    default:\n      console.log('Play Reducer', 'unrecognised type');\n      return { ...state\n      };\n  }\n}; // POUR : i de 1 a 100\n// SI : i % nombre choisi == 0 -> diviseurs communs donc on repond\n// SINON SI : POUR : j de 1 a 100 -> i * j == nombre choisi -> multiple donc on repond\n// SINON : RANDOM DE 1 A 100","map":{"version":3,"sources":["/Users/jeanbapt-sanchez/Documents/school/bddi-2020/gobelins-2020/Semaine-7/J4/game-juniper-green/src/reducers/Play.js"],"names":["initialState","message","myNumber","choice","reducer","state","action","type","console","log","number","concat","Math","random"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,OAAO,EAAE,EADiB;AAE1BC,EAAAA,QAAQ,EAAE,CAFgB;AAG1BC,EAAAA,MAAM,EAAE;AAHkB,CAArB;AAMP,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC7C,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,iBAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,iBAA5B;;AACA,UAAIH,MAAM,CAACI,MAAX,EAAmB;AACjB,eAAO,EACL,GAAGL,KADE;AAELF,UAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,CAAa,QAAb,EAAuBQ,MAAvB,CAA8BN,KAAK,CAACH,QAApC,CAFH;AAGLD,UAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,GAAiB,YAAWK,MAAM,CAACI,MAAO;AAH9C,SAAP;AAKD,OAND,MAMO;AACL,eAAO,EACL,GAAGL,KADE;AAELJ,UAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,GAAgB;AAFpB,SAAP;AAID;;AAEH,SAAK,qBAAL;AACEO,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,qBAA5B;AACA,aAAO,EACL,GAAGJ,KADE;AAELF,QAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,CAAa,UAAb,EAAyBQ,MAAzB,CAAgC,MAAOC,IAAI,CAACC,MAAL,MAAiB,MAAM,CAAvB,IAA4B,CAAnE;AAFH,OAAP;;AAIF;AACEL,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,mBAA5B;AACA,aAAO,EACL,GAAGJ;AADE,OAAP;AAxBJ;AA4BD,CA7BM,C,CA+BP;AACA;AACA;AACA","sourcesContent":["export const initialState = {\n  message: '',\n  myNumber: 1,\n  choice: {}\n}\n\nexport const reducer = (state = {}, action) => {\n  switch(action.type) {\n    case 'ADD_YOUR_CHOICE':\n      console.log('Play Reducer', 'ADD_YOUR_CHOICE')\n      if (action.number) {\n        return {\n          ...state,\n          choice: state.choice['player'].concat(state.myNumber),\n          message: state.message = `You send ${action.number}`\n        }\n      } else {\n        return {\n          ...state,\n          message: state.message = 'Is not a valid number'\n        }\n      }\n\n    case 'ADD_COMPUTER_CHOICE':\n      console.log('Play Reducer', 'ADD_COMPUTER_CHOICE')\n      return {\n        ...state,\n        choice: state.choice['computer'].concat(() => (Math.random() * (100 - 0) + 0))\n      }\n    default:\n      console.log('Play Reducer', 'unrecognised type')\n      return {\n        ...state\n      }\n  }\n}\n\n// POUR : i de 1 a 100\n// SI : i % nombre choisi == 0 -> diviseurs communs donc on repond\n// SINON SI : POUR : j de 1 a 100 -> i * j == nombre choisi -> multiple donc on repond\n// SINON : RANDOM DE 1 A 100\n"]},"metadata":{},"sourceType":"module"}